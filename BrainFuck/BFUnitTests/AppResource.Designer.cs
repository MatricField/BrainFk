//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BrainFuck.TestRunner {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BrainFuck.TestRunner.AppResource", typeof(AppResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [bsort.b -- bubble sort
        ///(c) 2016 Daniel B. Cristofani
        ///http://brainfuck.org/]
        ///
        ///&gt;&gt;,[&gt;&gt;,]&lt;&lt;[
        ///[&lt;&lt;]&gt;&gt;&gt;&gt;[
        ///&lt;&lt;[&gt;+&lt;&lt;+&gt;-]
        ///&gt;&gt;[&gt;+&lt;&lt;&lt;&lt;[-&gt;]&gt;[&lt;]&gt;&gt;-]
        ///&lt;&lt;&lt;[[-]&gt;&gt;[&gt;+&lt;-]&gt;&gt;[&lt;&lt;&lt;+&gt;&gt;&gt;-]]
        ///&gt;&gt;[[&lt;+&gt;-]&gt;&gt;]&lt;
        ///]&lt;&lt;[&gt;&gt;+&lt;&lt;-]&lt;&lt;
        ///]&gt;&gt;&gt;&gt;[.&gt;&gt;]
        ///
        ///[This program sorts the bytes of its input by bubble sort.].
        /// </summary>
        internal static string BSort {
            get {
                return ResourceManager.GetString("BSort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to +++[&gt;+++++&lt;-]&gt;&gt;+&lt;[&gt;&gt;++++&gt;++&gt;+++++&gt;+++++&gt;+&gt;&gt;+&lt;++[++&lt;]&gt;---]
        ///
        ///&gt;++++.&gt;&gt;&gt;.+++++.&gt;------.&lt;--.+++++++++.&gt;+.+.&lt;&lt;&lt;&lt;---.[&gt;]&lt;&lt;.&lt;&lt;&lt;.-------.&gt;++++.
        ///&lt;+++++.+.&gt;-----.&gt;+.&lt;++++.&gt;&gt;++.&gt;-----.
        ///
        ///&lt;&lt;&lt;-----.+++++.-------.&lt;--.&lt;&lt;&lt;.&gt;&gt;&gt;.&lt;&lt;+.&gt;------.-..--.+++.-----&lt;++.&lt;--[&gt;+&lt;-]
        ///&gt;&gt;&gt;&gt;&gt;--.--.&lt;++++.&gt;&gt;-.&lt;&lt;&lt;.&gt;&gt;&gt;--.&gt;.
        ///
        ///&lt;&lt;&lt;&lt;-----.&gt;----.++++++++.----&lt;+.+++++++++&gt;&gt;--.+.++&lt;&lt;&lt;&lt;.[&gt;]&lt;.&gt;&gt;
        ///
        ///,[&gt;&gt;+++[&lt;+++++++&gt;-]&lt;[&lt;[-[-&lt;]]&gt;&gt;[&gt;]&lt;-]&lt;[&lt;+++++&gt;-[&lt;+++&gt;-[&lt;--&gt;-[&lt;+++&gt;-
        ///[&lt;++++[&gt;[-&gt;&gt;]&lt;[&gt;&gt;]&lt;&lt;-]&gt;[&lt;+++&gt;-[&lt;---&gt;-[&lt;++++&gt;-[&lt;+++[&gt;[-[-[-[-&gt;&gt;]]]]&lt;[&gt;&gt;]&lt;&lt;-]
        ///&gt;[&lt;+&gt;-[&lt;-&gt;-[&lt;++&gt;-[&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string dbf2c {
            get {
                return ResourceManager.GetString("dbf2c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [ This program prints &quot;Hello World!&quot; and a newline to the screen, its
        ///  length is 106 active command characters. [It is not the shortest.]
        ///
        ///  This loop is an &quot;initial comment loop&quot;, a simple way of adding a comment
        ///  to a BF program such that you don&apos;t have to worry about any command
        ///  characters. Any &quot;.&quot;, &quot;,&quot;, &quot;+&quot;, &quot;-&quot;, &quot;&lt;&quot; and &quot;&gt;&quot; characters are simply
        ///  ignored, the &quot;[&quot; and &quot;]&quot; characters just have to be balanced. This
        ///  loop and the commands it contains are ignored because the current cell
        ///  def [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HelloWorld {
            get {
                return ResourceManager.GetString("HelloWorld", resourceCulture);
            }
        }
    }
}
